name: Release Packages

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: pnpm/action-setup@v2
        with:
          version: 10.5.2

      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: |
          pnpm install
          pnpm add -Dw semver

      - name: Build
        run: pnpm core:build

      - name: Get version
        id: get_version
        run: |
          # 获取最新的 tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          # 去掉可能的 v 前缀
          LATEST_VERSION=${LATEST_TAG#v}
          # 增加 patch 版本号
          NEW_VERSION=$(node -p "require('semver').inc('$LATEST_VERSION', 'patch')")
          echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version
        run: |
          # 更新所有包的版本号
          pnpm version ${{ steps.get_version.outputs.NEW_VERSION }} --no-git-tag-version
          cd apps/web && pnpm version ${{ steps.get_version.outputs.NEW_VERSION }} --no-git-tag-version
          cd ../../packages/core && pnpm version ${{ steps.get_version.outputs.NEW_VERSION }} --no-git-tag-version
          cd ../..
          # 提交版本更新
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "chore: bump version to ${{ steps.get_version.outputs.NEW_VERSION }}"
          git push

      - name: Create tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          TAG="${{ steps.get_version.outputs.NEW_VERSION }}"
          git tag "$TAG"
          git push origin "$TAG"

      - name: Publish to npm
        run: |
          cd packages/core
          npm pkg set name="emojito"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GitHub Package
        run: |
          cd packages/core
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > .npmrc
          echo "@chatgavin:registry=https://npm.pkg.github.com" >> .npmrc
          npm pkg set name="@chatgavin/emojito"
          npm pkg set repository="https://github.com/ChatGavin/emojito.git"
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
